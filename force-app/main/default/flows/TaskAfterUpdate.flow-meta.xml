<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Notif_CSM</name>
        <label>Send Notif CSM</label>
        <locationX>578</locationX>
        <locationY>815</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Get_Notif_Id.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>Push_Body</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>Pigedisponible</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>Collection_CSM</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>Get_Case.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Assign_Values_to_task</name>
        <label>Assign Values to task</label>
        <locationX>182</locationX>
        <locationY>1151</locationY>
        <assignmentItems>
            <assignToReference>Task_VAR.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TaskOwnerForm</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Task_VAR.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task_Template.Priorite__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Task_VAR.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Task_VAR.TaskType__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Email</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Task_VAR.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task_Template.Titre_tache__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Task_VAR.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task_Template.Commentaires__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Task_VAR.Template_de_tache__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Task_Template.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Task_VAR.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>DueDate_FORM</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Task</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_Task_var_Case</name>
        <label>Assignment Task var Case</label>
        <locationX>314</locationX>
        <locationY>815</locationY>
        <assignmentItems>
            <assignToReference>Task_VAR.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Mesure</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_Task_Var_Opp</name>
        <label>Assignment Task Var Opp</label>
        <locationX>50</locationX>
        <locationY>935</locationY>
        <assignmentItems>
            <assignToReference>Task_VAR.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Opportunity.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Values_to_task</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_to_collection_CSM</name>
        <label>Assignment to collection CSM</label>
        <locationX>578</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>Collection_CSM</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Case.CSMenCharge__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Notif_CSM</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Pige disponible</description>
        <name>Pigedisponible</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Pige disponible</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Action_type</name>
        <label>Action type</label>
        <locationX>644</locationX>
        <locationY>455</locationY>
        <defaultConnectorLabel>Rien</defaultConnectorLabel>
        <rules>
            <name>Task_To_create</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Template_de_tache__r.Declenche_Tache__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Task_Template</targetReference>
            </connector>
            <label>Task To create</label>
        </rules>
        <rules>
            <name>Push_Action</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Template_de_tache__r.Action_supplementaire__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Push_CSM</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Notif_Id</targetReference>
            </connector>
            <label>Push Action</label>
        </rules>
        <rules>
            <name>Activer_la_campagne</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Template_de_tache__r.Action_supplementaire__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Activer_campagne</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case</targetReference>
            </connector>
            <label>Activer la campagne</label>
        </rules>
    </decisions>
    <decisions>
        <name>Opportunit_Requete</name>
        <label>Opportunité/Requête</label>
        <locationX>182</locationX>
        <locationY>695</locationY>
        <defaultConnector>
            <targetReference>Assignment_Task_var_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Requête</defaultConnectorLabel>
        <rules>
            <name>Opportunity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Task_Template.Objet__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Opportunity</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Opportunity</targetReference>
            </connector>
            <label>Opportunite</label>
        </rules>
    </decisions>
    <formulas>
        <name>DueDate_FORM</name>
        <dataType>Date</dataType>
        <expression>IF(ISPICKVAL({!Get_Task_Template.Avant_Apres__c}, &apos;Avant&apos;) &amp;&amp; ISPICKVAL({!Get_Task_Template.Evenement__c},&apos;Opportunite_Date_Debut_Campagne&apos;),{!Get_Opportunity.CampaignStartDate__c} - {!Get_Task_Template.Nombre_Jours__c},
IF(ISPICKVAL({!Get_Task_Template.Avant_Apres__c}, &apos;Apres&apos;) &amp;&amp; ISPICKVAL({!Get_Task_Template.Evenement__c},&apos;Opportunite_Date_Debut_Campagne&apos;),{!Get_Opportunity.CampaignStartDate__c} + {!Get_Task_Template.Nombre_Jours__c},
IF(ISPICKVAL({!Get_Task_Template.Avant_Apres__c}, &apos;Avant&apos;) &amp;&amp; ISPICKVAL({!Get_Task_Template.Evenement__c},&apos;Requete_Date_Debut_Campagne&apos;), {!Get_Case.StartDate__c} - {!Get_Task_Template.Nombre_Jours__c},
IF(ISPICKVAL({!Get_Task_Template.Avant_Apres__c}, &apos;Apres&apos;) &amp;&amp; ISPICKVAL({!Get_Task_Template.Evenement__c},&apos;Requete_Date_Debut_Campagne&apos;), {!Get_Case.StartDate__c} + {!Get_Task_Template.Nombre_Jours__c},
IF(ISPICKVAL({!Get_Task_Template.Avant_Apres__c}, &apos;Avant&apos;) &amp;&amp; ISPICKVAL({!Get_Task_Template.Evenement__c},&apos;Requete_Date_Fin_Campagne&apos;), {!Get_Case.EndDate__c} - {!Get_Task_Template.Nombre_Jours__c},
IF(ISPICKVAL({!Get_Task_Template.Avant_Apres__c}, &apos;Apres&apos;) &amp;&amp; ISPICKVAL({!Get_Task_Template.Evenement__c},&apos;Requete_Date_Fin_Campagne&apos;), {!Get_Case.EndDate__c} + {!Get_Task_Template.Nombre_Jours__c},
Null
))))))</expression>
    </formulas>
    <formulas>
        <name>TaskOwnerForm</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!Get_Task_Template.Assigne__c}, &apos;CSM en charge&apos;) &amp;&amp; {!Opportunity}, {!Get_Opportunity.CSMenCharge__r.Id},
IF(ISPICKVAL({!Get_Task_Template.Assigne__c}, &apos;Owner&apos;) &amp;&amp; {!Opportunity}, {!Get_Opportunity.OwnerId},
IF(ISPICKVAL({!Get_Task_Template.Assigne__c}, &apos;CSM en charge&apos;) &amp;&amp; {!Get_Task_Template.Objet__c} =&apos;Case&apos;,{!Get_Case.CSMenCharge__c},
IF(ISPICKVAL({!Get_Task_Template.Assigne__c}, &apos;Owner&apos;)&amp;&amp; {!Get_Task_Template.Objet__c} =&apos;Case&apos;, {!Get_Case.OwnerId},
IF(ISPICKVAL({!Get_Task_Template.Assigne__c}, &apos;Equipe Mesure&apos;),{!Get_Mesure.Id},&apos;&apos;)))))</expression>
    </formulas>
    <interviewLabel>TaskAfterUpdate {!$Flow.CurrentDateTime}</interviewLabel>
    <label>TaskAfterUpdate</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Task</name>
        <label>Create Task</label>
        <locationX>182</locationX>
        <locationY>1271</locationY>
        <inputReference>Task_VAR</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>644</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Action_type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Mesure</name>
        <label>Get Mesure</label>
        <locationX>314</locationX>
        <locationY>935</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Values_to_task</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.Email_Equipe_Mesure</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Notif_Id</name>
        <label>Get Notif Id</label>
        <locationX>578</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assignment_to_collection_CSM</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CustomNotifTypeName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Notifications</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Opportunity</name>
        <label>Get Opportunity</label>
        <locationX>50</locationX>
        <locationY>815</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assignment_Task_Var_Opp</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Task_Template</name>
        <label>Get Task Template</label>
        <locationX>182</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Opportunit_Requete</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Template_de_tache__r.Declenche_Tache__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>TacheTemplate__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>842</locationX>
        <locationY>575</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>En cours</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>518</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Tech_Trigger__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Task</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>Push_Body</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Bonjour, la pige a été ajoutée à la requête {!Get_Case.CampaignName__c}. Cliquez sur cette notification pour y accéder.&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>Collection_CSM</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Task_VAR</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
</Flow>
